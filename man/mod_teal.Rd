% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mod_teal.R
\name{mod_teal}
\alias{mod_teal}
\title{Wrapper function for teal modules to enable their use with \code{dv.manager}}
\usage{
mod_teal(module_id, teal_module, j_keys = teal.data::join_keys())
}
\arguments{
\item{module_id}{\verb{[character(1)]}

Unique identifier for the module.}

\item{teal_module}{\verb{[teal_module]}

Teal module like \code{\link[teal.modules.clinical:tm_t_events]{teal.modules.clinical::tm_t_events()}}}

\item{j_keys}{\verb{[join_keys]}

object with dataset column relationships used for joining. Will be created by \code{\link[teal.data:join_keys]{teal.data::join_keys()}}}
}
\value{
A list containing the following elements to be used by
\pkg{dv.manager}:
\itemize{
\item{\code{ui}: A UI function of the \pkg{dv.teal} module.}
\item{\code{server}: A server function of the \pkg{dv.teal} module.}
\item{\code{module_id}: A unique identifier.}
}
}
\description{
Wrapper function for teal modules to enable their use with \code{dv.manager}
}
\examples{
\dontrun{
dm <- pharmaversesdtm::dm |>
dplyr::mutate(
  ARM = as.factor(dplyr::if_else(ARM == "", "<EMPTY>", ARM)),
  ACTARM = as.factor(dplyr::if_else(ACTARM == "", "<EMPTY>", ACTARM)),
  ARMCD = as.factor(dplyr::if_else(ARMCD == "", "<EMPTY>", ARMCD))
)

ae <- pharmaversesdtm::ae

data_list <- list(
  dm = dm,
  ae = ae
)

j_keys <- teal.data::join_keys(
  teal.data::join_key(
    "dm",
    keys = c("STUDYID", "USUBJID")
  ),
  teal.data::join_key(
    "ae",
    keys = c("STUDYID", "USUBJID")
  ),
  teal.data::join_key(
    "dm",
    "ae",
    keys = c("STUDYID", "USUBJID")
  )
)

mod_events <- teal.modules.clinical::tm_t_events(
  label = "Adverse Event Table",
  dataname = "ae",
  parentname = "dm",
  arm_var = choices_selected(c("ARM", "ARMCD"), "ARM"),
  llt = choices_selected(
    choices = variable_choices(ae, c("AETERM", "AEDECOD")),
    selected = c("AEDECOD")
  ),
  hlt = choices_selected(
    choices = variable_choices(ae, c("AEBODSYS", "AESOC")),
    selected = "AEBODSYS"
  ),
  add_total = TRUE,
  event_type = "adverse event"
)

module_list <- list(
  "Events" = mod_teal(
    "events",
    mod_events,
    j_keys = j_keys
  )
)

dv.manager::run_app(
  data = list("demo" = data_list),
  module_list = module_list,
  filter_data = "dm"
)
}
}
